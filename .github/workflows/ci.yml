name: CI

on:
  - push
  - pull_request

env:
  # Allow automated checks.
  DJVULIBRE_VERSION: 3.5.28

jobs:
  main:
    strategy:
      matrix:
        python: [3.8, 3.9, '3.10', '3.11']
    runs-on: ubuntu-latest
    name: Python ${{ matrix.python }}
    steps:
    - uses: actions/checkout@v3
    - name: set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
    - name: apt update
      run:
        sudo apt-get update
    - name: apt install deps
      run: |
        sudo apt-get install language-pack-ja ghostscript
    - name: install ccache
      run: |
        sudo apt-get install ccache
        echo "/usr/lib/ccache:$PATH" >> $GITHUB_PATH
    - name: restore ccache data
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key:
          ccache-${DJVULIBRE_VERSION}-py${{ matrix.python }}
        restore-keys:
          ccache-${DJVULIBRE_VERSION}-py${{ matrix.python }}
    - name: install DjVuLibre
      run: |
        wget https://downloads.sourceforge.net/project/djvu/DjVuLibre/${DJVULIBRE_VERSION}/djvulibre-${DJVULIBRE_VERSION}.tar.gz
        tar -xvvf djvulibre-*.tar.gz
        (cd djvulibre-*/ && ./configure --disable-desktopfiles --prefix ~/.local CXXFLAGS="-fpermissive -include cstddef" || cat config.log /fail)
        make -C djvulibre-*/libdjvu/ install
        make -C djvulibre-*/tools/ install
        make -C djvulibre-*/ install
        echo CPATH=~/.local/include/ >> $GITHUB_ENV
        echo PKG_CONFIG_PATH=~/.local/lib/pkgconfig/ >> $GITHUB_ENV
        echo LD_LIBRARY_PATH=~/.local/lib/ >> $GITHUB_ENV
    - name: update PIP
      run:
        python -m pip install --upgrade pip
    - name: install wheel
      run:
        python -m pip install wheel
    - name: install Cython
      run:
        python -m pip install Cython
    - name: check changelog syntax
      run:
        dpkg-parsechangelog -ldoc/changelog --all 2>&1 >/dev/null | { ! grep .; }
    - name: build the extension in-place
      run:
        PYTHONWARNINGS=error::FutureWarning python setup.py build_ext --inplace
    - name: run tests
      run:
        LC_ALL=C python -m unittest discover tests/ -v
    - name: build the docs
      run: |
        python -m pip install sphinx
        PYTHONPATH=$PWD sphinx-build -W -b doctest doc/api/ tmp
    - name: check reST syntax
      run:
        private/check-rst
    # TODO: Run flake8.
    - name: build sdist
      run:
        python setup.py sdist
    - name: check sdist tarball
      run:
        tar -tvf dist/*.tar.gz | { ! grep -F /djvu/config.pxi; }
    - name: install via sdist
      run:
        python -m pip install dist/*.tar.gz
    - name: check import
      run: |
        cd /
        python -c 'import djvu.sexpr, djvu.decode'
    - name: uninstall
      run: |
        cd /
        pip uninstall -y python-djvulibre
        set +e; python -c 'import djvu'; [ $? -eq 1 ]
    - name: install via setup.py
      run:
        python setup.py install
    - name: check import
      run: |
        cd /
        python -c 'import djvu.sexpr, djvu.decode'

# vim:ts=2 sts=2 sw=2 et
