name: CI
on:
  push:
    branches-ignore:
    - appveyor
  pull_request:
jobs:
  main:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        python-version:
        - '2.7'
        - '3.6'
        - '3.7'
        - '3.8'
        - '3.9'
        os: [ubuntu-20.04]
        djvulibre-version: ['3.5.27']
        use-sphinx: [true]
        include:
        - python-version: '2.7'
          os: ubuntu-18.04
          djvulibre-version: '3.5.21'
          cython-version: '0.19.1'
        - python-version: '3.3'
          os: ubuntu-18.04
          djvulibre-version: '3.5.21'
          cython-version: '0.20'
        - python-version: '3.4'
          os: ubuntu-18.04
          djvulibre-version: '3.5.27'
        - python-version: '3.5'
          os: ubuntu-18.04
          djvulibre-version: '3.5.27'
        - python-version: '3.10-dev'
          os: ubuntu-20.04
          djvulibre-version: '3.5.27'
    steps:
    - uses: actions/checkout@v2
    - name: set up pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: pip-${{matrix.os}}-python${{matrix.python-version}}-cython${{matrix.cython-version}}-djvulibre${{matrix.djvulibre-version}}
        restore-keys: |
          pip-${{matrix.os}}-python${{matrix.python-version}}-
          pip-${{matrix.os}}-
    - name: set up ccache
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ccache-${{matrix.os}}-djvulibre${{matrix.djvulibre-version}}-python${{matrix.python-version}}-cython${{matrix.cython-version}}
        restore-keys: |
          ccache-${{matrix.os}}-djvulibre${{matrix.djvulibre-version}}-
    - name: Set up Python ${{matrix.python-version}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python-version}}
    - run: |
        sudo apt-get update
    - run: |
        sudo apt-get install ccache language-pack-ja ghostscript
    - name: add /usr/lib/ccache to $PATH
      run: |
        echo "/usr/lib/ccache:$PATH" >> $GITHUB_PATH
    - name: install DjVuLibre
      run: |
        wget https://downloads.sourceforge.net/project/djvu/DjVuLibre/${{matrix.djvulibre-version}}/djvulibre-${{matrix.djvulibre-version}}.tar.gz
        tar -xvvf djvulibre-*.tar.gz
        (cd djvulibre-*/ && ./configure --disable-desktopfiles --prefix ~/.local CXXFLAGS="-fpermissive -include cstddef" || cat config.log /fail)
        make -C djvulibre-*/libdjvu/ install
        make -C djvulibre-*/tools/ install
        if [[ ${{matrix.djvulibre-version}} != 3.5.21 ]]; then make -C djvulibre-*/ install; fi
        echo CPATH=~/.local/include/ >> $GITHUB_ENV
        echo PKG_CONFIG_PATH=~/.local/lib/pkgconfig/ >> $GITHUB_ENV
        echo LD_LIBRARY_PATH=~/.local/lib/ >> $GITHUB_ENV
    - run: |
        pip install wheel
    - name: install Cython
      run: |
        cyver=${{matrix.cython-version}}
        pip install --build ~/build-cython "cython${cyver:+==$cyver}"
    - run: |
        pip install subprocess32
      if: ${{matrix.python-version == '2.7'}}
    - run: |
        pip install sphinx
      if: ${{matrix.use-sphinx}}
    - run: |
        pip install pycodestyle
    - run: |
        pip install pydiatra
    - name: install pyflakes
      run: |
        pyflakes=pyflakes
        if [[ ${{matrix.python-version}} = 3.3 ]]; then pyflakes='pyflakes<2'; fi
        pip install $pyflakes
    - name: check changelog syntax
      run: |
        dpkg-parsechangelog -ldoc/changelog --all 2>&1 >/dev/null | { ! grep .; }
    - name: build the extension in-place
      run: |
        PYTHONWARNINGS=error::FutureWarning python setup.py build_ext --inplace
    - name: run tests
      run: |
        LC_ALL=C python -m unittest discover tests/ -v
    - name: build the docs
      run: |
        PYTHONPATH=$PWD sphinx-build -W -b doctest doc/api/ tmp
      if: ${{matrix.use-sphinx}}
    - name: check reST syntax
      run: |
        private/check-rst
      if: ${{matrix.use-sphinx}}
    - run: |
        python -m pycodestyle .
    - run: |
        python -m pydiatra .
    - run: |
        pyflakes .
    - name: build sdist
      run: |
        python setup.py sdist
    - name: check sdist tarball
      run: |
        tar -tvf dist/*.tar.gz | { ! grep -F /djvu/config.pxi; }
    - name: install via sdist
      run: |
        pip install dist/*.tar.gz
    - name: check import
      run: |
        cd /
        python -c 'import djvu.sexpr, djvu.decode'
    - name: uninstall
      run: |
        cd /
        pip uninstall -y python-djvulibre
        set +e; python -c 'import djvu'; [ $? -eq 1 ]
    - name: install via setup.py
      run:
        python setup.py install
    - name: check import
      run: |
        cd /
        python -c 'import djvu.sexpr, djvu.decode'
  PyPI:
    runs-on: ubuntu-latest
    steps:
    - name: check for namesquatting
      run: |
        set +e
        curl -fsS https://pypi.org/simple/djvulibre/; [ $? -eq 22 ] || exit 1
        curl -fsS https://pypi.org/simple/djvu/; [ $? -eq 22 ] || exit 1
        curl -fsS https://pypi.org/simple/python-djvu/; [ $? -eq 22 ] || exit 1

# vim:ts=2 sts=2 sw=2 et
